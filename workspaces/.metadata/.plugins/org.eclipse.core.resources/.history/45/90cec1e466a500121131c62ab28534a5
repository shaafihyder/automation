/*
package com.project.automated.framework.sparqlquery;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.PageFactory;

import com.project.automated.framework.libraries.GlobalLibrary;
import com.project.automated.framework.libraries.MethodsLibrary;
import com.project.automated.framework.libraries.FunctionsLibrary;

import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;
import org.testng.annotations.AfterTest;
import org.testng.annotations.AfterClass;

import org.testng.annotations.BeforeMethod;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeGroups;

public class Superclass implements GlobalLibrary{
    
@BeforeTest
public void BeforeTest (){
        WebDriver driver;
        this.methodSuperclassPREREQUISITE1WebAppLogin();
        this.methodSuperclassPREREQUISITE2StartDatabase();
}    
public void methodSuperclassPREREQUISITE1WebAppLogin (){
		  	
	System.out.println("===========================================================");    	
	System.out.println("[" + this.getClass().getSimpleName() + "] " + new Exception().getStackTrace()[0].getMethodName() + " ()");
	System.out.println("===========================================================\n");    	
	System.out.println("[" + this.getClass().getSimpleName() + "] Date & Time : " + FunctionsLibrary.functionGetDateTime ());
	System.out.println("=======================================================================");    	
	    
	// BROWSER
	MethodsLibrary.objectBrowserWebApp_launch (GlobalLibrary.URIKAMACHINE);
	MethodsLibrary.objectBrowserWebApp_maximize ();
	     	
	// LOGIN
	MethodsLibrary.objectTextfieldLoginUsername_enterdata (GlobalLibrary.USERNAME, lTimeOut);
	MethodsLibrary.objectTextfieldLoginPassword_enterdata (GlobalLibrary.PASSWORD, lTimeOut);
	MethodsLibrary.objectPushbuttonLoginSignIn_click (lTimeOut);
	}  
public void methodSuperclassPREREQUISITE2StartDatabase (){
  	
	System.out.println("===========================================================");    	
	System.out.println("[" + this.getClass().getSimpleName() + "] " + new Exception().getStackTrace()[0].getMethodName() + " ()");
	System.out.println("===========================================================\n");    	
	System.out.println("[" + this.getClass().getSimpleName() + "] Date & Time : " + FunctionsLibrary.functionGetDateTime ());
	System.out.println("=======================================================================");    	
	    
   	// IMPORT DATA
   	MethodsLibrary.objectPushbuttonTabDashboard_click (lTimeOut);
   	MethodsLibrary.objectPushbuttonTabManageData_click (lTimeOut);
   	MethodsLibrary.objectPushbuttonImportAddData_click (lTimeOut);
   	MethodsLibrary.objectTextfieldImportNameYourArtifact_enterdata ("AUTOMATION-Artifact-lubm0", lTimeOut);
   	MethodsLibrary.objectTextfieldImportComment_enterdata ("AUTOMATION-Artifact-lubm0", lTimeOut);
   	MethodsLibrary.objectPushButtonImportDataCancel_click (lTimeOut);
   	
   	// NEW DATABASE
   	MethodsLibrary.objectPushButtonTabManageDatabase_click (lTimeOut);
    MethodsLibrary.objectPushbuttonNewDatabase_click (lTimeOut);
   	MethodsLibrary.objectTextfieldNewDatabaseName_enterdata ("AUTOMATION-Database", lTimeOut);
   	MethodsLibrary.objectPushbuttonNewDatabaseAddData_click (lTimeOut);
   	MethodsLibrary.objectTextfieldNewDatabaseSearch_enterdata("AUTOMATION", lTimeOut);
   	MethodsLibrary.objectCheckboxNewDatabase_check (lTimeOut);
   	MethodsLibrary.objectPushbuttonNewDatabaseSubmit_click (lTimeOut);
   	MethodsLibrary.objectPushbuttonNewDatabaseApplyStart_click (lTimeOut);
   	MethodsLibrary.objectPushbuttonNewDatabaseApplyStartConfirm_click (lTimeOut);
	}  
}
	        
	        
	   
   
	        
*/	   
	